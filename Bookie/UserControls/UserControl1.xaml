<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared"
	mc:Ignorable="d"
	x:Class="Bookie.UserControl1"
	x:Name="UserControl"
	d:DesignWidth="640" d:DesignHeight="480">
	<UserControl.Resources>
		<HierarchicalDataTemplate x:Key="ItemTemplate">
			<StackPanel>
				<TextBlock Text="{Binding Name}"/>
			</StackPanel>
		</HierarchicalDataTemplate>
		<HierarchicalDataTemplate x:Key="ItemTemplate1" ItemsSource="{Binding Collection}">
			<StackPanel>
				<TextBlock Text="{Binding Property1}"/>
			</StackPanel>
		</HierarchicalDataTemplate>
		<Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
			<Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeView}">
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ScrollViewer>
								<ItemsPresenter/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GrayBrush9}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemContainerStyle">
				<Setter.Value>
					<Style TargetType="{x:Type TreeViewItem}">
						 <Setter Property="IsExpanded" Value="True"/>
						<Setter Property="MinHeight" Value="35"/>
						<Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
						<Setter Property="Background" Value="Transparent"/>
						<Setter Property="FocusVisualStyle">
							<Setter.Value>
								<Style>
									<Setter Property="Control.Template">
										<Setter.Value>
											<ControlTemplate>
												<Border>
													<Rectangle Margin="0" Opacity="0" Stroke="Black" StrokeThickness="5" StrokeDashArray="1 2"/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Setter.Value>
						</Setter>
						<Setter Property="SnapsToDevicePixels" Value="True"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TreeViewItem}">
									<StackPanel>
										<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="{TemplateBinding MinHeight}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
											<Grid VerticalAlignment="Stretch">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="19"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<Grid.Margin>
													<Binding RelativeSource="{RelativeSource TemplatedParent}">
														<Binding.Converter>
															<Custom:TreeViewMarginConverter Length="12"/>
														</Binding.Converter>
													</Binding>
												</Grid.Margin>
												<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
													<ToggleButton.Style>
														<Style TargetType="{x:Type ToggleButton}">
															<Setter Property="Focusable" Value="False"/>
															<Setter Property="Width" Value="16"/>
															<Setter Property="Height" Value="16"/>
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type ToggleButton}">
																		<Grid Background="Transparent" Height="16" Width="16">
																			<Path x:Name="ExpandPath" Data="M4,0L8,4 4,8z" Fill="Transparent" HorizontalAlignment="Center" Stroke="{DynamicResource BlackBrush}" StrokeThickness="1" VerticalAlignment="Center"/>
																		</Grid>
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsChecked" Value="True">
																				<Setter Property="RenderTransform" TargetName="ExpandPath">
																					<Setter.Value>
																						<RotateTransform Angle="45" CenterY="4" CenterX="4"/>
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource BlackBrush}"/>
																				<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource BlackBrush}"/>
																			</Trigger>
																			<Trigger Property="IsEnabled" Value="False">
																				<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}"/>
																			</Trigger>
																			<MultiTrigger>
																				<MultiTrigger.Conditions>
																					<Condition Property="IsEnabled" Value="False"/>
																					<Condition Property="IsChecked" Value="True"/>
																				</MultiTrigger.Conditions>
																				<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}"/>
																				<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource GrayBrush5}"/>
																			</MultiTrigger>
																			<Trigger Property="IsMouseOver" Value="True">
																				<Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}"/>
																				<Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource AccentColorBrush}"/>
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</ToggleButton.Style>
												</ToggleButton>
												<ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											</Grid>
										</Border>
										<ItemsPresenter x:Name="ItemsHost">
											<ItemsPresenter.LayoutTransform>
												<ScaleTransform ScaleY="1"/>
											</ItemsPresenter.LayoutTransform>
										</ItemsPresenter>
									</StackPanel>
									<ControlTemplate.Triggers>
										<Trigger Property="IsExpanded" Value="False">
											<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
										</Trigger>
										<Trigger Property="HasItems" Value="False">
											<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
										</Trigger>
										<Trigger Property="IsMouseOver" SourceName="Border" Value="True">
											<Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush3}"/>
											<Setter Property="TextElement.Foreground" Value="{DynamicResource BlackColorBrush}"/>
										</Trigger>
										<Trigger Property="IsSelected" Value="True">
											<Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush}"/>
											<Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}"/>
										</Trigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter Property="Foreground" Value="{DynamicResource GrayBrush7}"/>
										</Trigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsEnabled" Value="False"/>
												<Condition Property="IsSelected" Value="True"/>
											</MultiTrigger.Conditions>
											<Setter Property="Background" TargetName="Border" Value="{DynamicResource GrayBrush7}"/>
											<Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}"/>
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsSelected" Value="True"/>
												<Condition Property="IsSelectionActive" Value="True"/>
											</MultiTrigger.Conditions>
											<Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush2}"/>
										</MultiTrigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>

	<Grid Background="#f1f2f4" x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource SampleDataSource}}">
		<TreeView Height="400" Width="200" ItemTemplate="{DynamicResource ItemTemplate1}" ItemsSource="{Binding Collection}" Style="{DynamicResource TreeViewStyle1}"/>
	</Grid>
</UserControl>